// Code generated by "stringer -type=DARs"; DO NOT EDIT.

package axon

import (
	"errors"
	"strconv"
)

var _ = errors.New("dummy error")

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[D1R-0]
	_ = x[D2R-1]
	_ = x[DARsN-2]
}

const _DARs_name = "D1RD2RDARsN"

var _DARs_index = [...]uint8{0, 3, 6, 11}

func (i DARs) String() string {
	if i < 0 || i >= DARs(len(_DARs_index)-1) {
		return "DARs(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DARs_name[_DARs_index[i]:_DARs_index[i+1]]
}

func (i *DARs) FromString(s string) error {
	for j := 0; j < len(_DARs_index)-1; j++ {
		if s == _DARs_name[_DARs_index[j]:_DARs_index[j+1]] {
			*i = DARs(j)
			return nil
		}
	}
	return errors.New("String: " + s + " is not a valid option for type: DARs")
}
