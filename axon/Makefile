# Basic Go makefile

GOCMD=go
GOBUILD=$(GOCMD) build
GOCLEAN=$(GOCMD) clean
GOTEST=$(GOCMD) test
GOGET=$(GOCMD) get

all: build

build:
	$(GOBUILD) -v
	
test:
	$(GOTEST) -v -tags multinet ./...
	
clean:
	$(GOCLEAN)

# NOTE: MUST update version number here prior to running 'make release'
VERS=v1.8.5
PACKAGE=axon
VERS_DATE=`date -u +%Y-%m-%d\ %H:%M`
GIT_COMMIT=`git rev-parse --short HEAD`
# VERS_FILE=$(shell echo `git rev-parse --show-toplevel`/version.go)
# note: version file is here in main axon dir within package
# nothing is built at the top level so not useful to put there
VERS_FILE=version.go

version:
	/bin/rm -f $(VERS_FILE)
	@echo "// WARNING: auto-generated by Makefile release target -- run 'make release' to update" > $(VERS_FILE)
	@echo "" >> $(VERS_FILE)
	@echo "package $(PACKAGE)" >> $(VERS_FILE)
	@echo "" >> $(VERS_FILE)
	@echo "const (" >> $(VERS_FILE)
	@echo "	Version     = \"$(VERS)\"" >> $(VERS_FILE)
	@echo "	GitCommit   = \"$(GIT_COMMIT)\" // the commit JUST BEFORE the release" >> $(VERS_FILE)
	@echo "	VersionDate = \"$(VERS_DATE)\" // UTC" >> $(VERS_FILE)
	@echo ")" >> $(VERS_FILE)
	@echo "" >> $(VERS_FILE)
	goimports -w $(VERS_FILE)
	/bin/cat $(VERS_FILE)
	git commit -am "$(VERS) release -- $(VERS_FILE) updated"

release:
	git tag -a $(VERS) -m "$(VERS) release"
	git push origin --tags

