// Code generated by "core generate -add-types"; DO NOT EDIT.

package chanplots

import (
	"cogentcore.org/core/types"
)

var _ = types.AddType(&types.Type{Name: "github.com/emer/axon/v2/chans/chanplots.AKPlot", IDName: "ak-plot", Methods: []types.Method{{Name: "GVRun", Doc: "GVRun plots the conductance G (and other variables) as a function of V.", Directives: []types.Directive{{Tool: "types", Directive: "add"}}}, {Name: "TimeRun", Doc: "TimeRun runs the equations over time.", Directives: []types.Directive{{Tool: "types", Directive: "add"}}}}, Fields: []types.Field{{Name: "AK", Doc: "AK function"}, {Name: "AKs", Doc: "AKs simplified function"}, {Name: "Vstart", Doc: "starting voltage"}, {Name: "Vend", Doc: "ending voltage"}, {Name: "Vstep", Doc: "voltage increment"}, {Name: "TimeSteps", Doc: "number of time steps"}, {Name: "TimeSpike", Doc: "do spiking instead of voltage ramp"}, {Name: "SpikeFreq", Doc: "spiking frequency"}, {Name: "TimeVstart", Doc: "time-run starting membrane potential"}, {Name: "TimeVend", Doc: "time-run ending membrane potential"}, {Name: "Dir"}, {Name: "Tabs"}}})

var _ = types.AddType(&types.Type{Name: "github.com/emer/axon/v2/chans/chanplots.GABABPlot", IDName: "gabab-plot", Methods: []types.Method{{Name: "GVRun", Doc: "GVRun plots the conductance G (and other variables) as a function of V.", Directives: []types.Directive{{Tool: "types", Directive: "add"}}}, {Name: "GSRun", Doc: "GSRun plots conductance as function of spiking rate.", Directives: []types.Directive{{Tool: "types", Directive: "add"}}}, {Name: "TimeRun", Doc: "TimeRun runs the equations over time.", Directives: []types.Directive{{Tool: "types", Directive: "add"}}}}, Fields: []types.Field{{Name: "GABAB", Doc: "standard chans version of GABAB"}, {Name: "Vgain", Doc: "multiplier on GABA-B as function of voltage"}, {Name: "Voff", Doc: "voltage offset for GABA-B exponential function"}, {Name: "Erev", Doc: "GABAb reversal / driving potential"}, {Name: "Vstart", Doc: "starting voltage"}, {Name: "Vend", Doc: "ending voltage"}, {Name: "Vstep", Doc: "voltage increment"}, {Name: "Smax", Doc: "max number of spikes"}, {Name: "TimeSteps", Doc: "total number of time steps to take"}, {Name: "TimeInc", Doc: "time increment per step"}, {Name: "TimeIn", Doc: "time in msec for inputs to remain on in TimeRun"}, {Name: "TimeHz", Doc: "frequency of spiking inputs at start of TimeRun"}, {Name: "Dir"}, {Name: "Tabs"}}})

var _ = types.AddType(&types.Type{Name: "github.com/emer/axon/v2/chans/chanplots.KirPlot", IDName: "kir-plot", Methods: []types.Method{{Name: "GVRun", Doc: "VmRun plots the equation as a function of V", Directives: []types.Directive{{Tool: "types", Directive: "add"}}}, {Name: "TimeRun", Doc: "TimeRun runs the equation over time.", Directives: []types.Directive{{Tool: "types", Directive: "add"}}}}, Fields: []types.Field{{Name: "Kir", Doc: "kIR function"}, {Name: "Vstart", Doc: "starting voltage"}, {Name: "Vend", Doc: "ending voltage"}, {Name: "Vstep", Doc: "voltage increment"}, {Name: "TimeSteps", Doc: "number of time steps"}, {Name: "TimeSpike", Doc: "do spiking instead of voltage ramp"}, {Name: "SpikeFreq", Doc: "spiking frequency"}, {Name: "TimeVstart", Doc: "time-run starting membrane potential"}, {Name: "TimeVend", Doc: "time-run ending membrane potential"}, {Name: "Dir"}, {Name: "Tabs"}}})

var _ = types.AddType(&types.Type{Name: "github.com/emer/axon/v2/chans/chanplots.MahpPlot", IDName: "mahp-plot", Methods: []types.Method{{Name: "GVRun", Doc: "GVRun plots the conductance G (and other variables) as a function of V.", Directives: []types.Directive{{Tool: "types", Directive: "add"}}}, {Name: "TimeRun", Doc: "TimeRun runs the equation over time.", Directives: []types.Directive{{Tool: "types", Directive: "add"}}}}, Fields: []types.Field{{Name: "Mahp", Doc: "mAHP function"}, {Name: "Vstart", Doc: "starting voltage"}, {Name: "Vend", Doc: "ending voltage"}, {Name: "Vstep", Doc: "voltage increment"}, {Name: "TimeSteps", Doc: "number of time steps"}, {Name: "TimeSpike", Doc: "do spiking instead of voltage ramp"}, {Name: "SpikeFreq", Doc: "spiking frequency"}, {Name: "TimeVstart", Doc: "time-run starting membrane potential"}, {Name: "TimeVend", Doc: "time-run ending membrane potential"}, {Name: "Dir"}, {Name: "Tabs"}}})

var _ = types.AddType(&types.Type{Name: "github.com/emer/axon/v2/chans/chanplots.NMDAPlot", IDName: "nmda-plot", Methods: []types.Method{{Name: "GVRun", Doc: "GVRun plots the conductance G (and other variables) as a function of V.", Directives: []types.Directive{{Tool: "types", Directive: "add"}}}, {Name: "TimeRun", Doc: "TimeRun runs the equation over time.", Directives: []types.Directive{{Tool: "types", Directive: "add"}}}}, Fields: []types.Field{{Name: "NMDA", Doc: "standard NMDA implementation in chans"}, {Name: "Vgain", Doc: "multiplier on NMDA as function of voltage"}, {Name: "Norm", Doc: "denominator of NMDA function"}, {Name: "Erev", Doc: "reversal / driving potential"}, {Name: "Vstart", Doc: "starting voltage"}, {Name: "Vend", Doc: "ending voltage"}, {Name: "Vstep", Doc: "voltage increment"}, {Name: "TimeSteps", Doc: "number of 1msec time steps for time run"}, {Name: "TimeV", Doc: "clamped voltage for TimeRun"}, {Name: "TimeIn", Doc: "time in msec for inputs to remain on in TimeRun"}, {Name: "TimeHz", Doc: "frequency of spiking inputs at start of TimeRun"}, {Name: "TimeGin", Doc: "proportion activation of NMDA channels per spike"}, {Name: "Dir"}, {Name: "Tabs"}}})

var _ = types.AddType(&types.Type{Name: "github.com/emer/axon/v2/chans/chanplots.SahpPlot", IDName: "sahp-plot", Methods: []types.Method{{Name: "GCaRun", Doc: "GCaRun plots the conductance G (and other variables) as a function of Ca.", Directives: []types.Directive{{Tool: "types", Directive: "add"}}}, {Name: "TimeRun", Doc: "TimeRun runs the equation over time.", Directives: []types.Directive{{Tool: "types", Directive: "add"}}}}, Fields: []types.Field{{Name: "Sahp", Doc: "sAHP function"}, {Name: "CaStart", Doc: "starting calcium"}, {Name: "CaEnd", Doc: "ending calcium"}, {Name: "CaStep", Doc: "calcium increment"}, {Name: "TimeSteps", Doc: "number of time steps"}, {Name: "TimeCaStart", Doc: "time-run starting calcium"}, {Name: "TimeCaD", Doc: "time-run CaD value at end of each theta cycle"}, {Name: "Dir"}, {Name: "Tabs"}}})

var _ = types.AddType(&types.Type{Name: "github.com/emer/axon/v2/chans/chanplots.SKCaPlot", IDName: "sk-ca-plot", Methods: []types.Method{{Name: "GCaRun", Doc: "GCaRun plots the conductance G (and other variables) as a function of Ca.", Directives: []types.Directive{{Tool: "types", Directive: "add"}}}, {Name: "TimeRun", Doc: "TimeRun runs the equation over time.", Directives: []types.Directive{{Tool: "types", Directive: "add"}}}}, Fields: []types.Field{{Name: "SKCa", Doc: "SKCa params"}, {Name: "CaParams", Doc: "time constants for integrating Ca from spiking across M, P and D cascading levels"}, {Name: "NoSpikeThr", Doc: "threshold of SK M gating factor above which the neuron cannot spike"}, {Name: "CaStep", Doc: "Ca conc increment for M gating func plot"}, {Name: "TimeSteps", Doc: "number of time steps"}, {Name: "TimeSpike", Doc: "do spiking instead of Ca conc ramp"}, {Name: "SpikeFreq", Doc: "spiking frequency"}, {Name: "Dir"}, {Name: "Tabs"}}})

var _ = types.AddType(&types.Type{Name: "github.com/emer/axon/v2/chans/chanplots.SynCaPlot", IDName: "syn-ca-plot", Methods: []types.Method{{Name: "TimeRun", Doc: "TimeRun runs the equation.", Directives: []types.Directive{{Tool: "types", Directive: "add"}}}}, Fields: []types.Field{{Name: "CaSpike", Doc: "Ca time constants"}, {Name: "CaDt"}, {Name: "Minit"}, {Name: "Pinit"}, {Name: "Dinit"}, {Name: "MdtAdj", Doc: "adjustment to dt to account for discrete time updating"}, {Name: "PdtAdj", Doc: "adjustment to dt to account for discrete time updating"}, {Name: "DdtAdj", Doc: "adjustment to dt to account for discrete time updating"}, {Name: "TimeSteps", Doc: "number of time steps"}, {Name: "Dir"}, {Name: "Tabs"}}})

var _ = types.AddType(&types.Type{Name: "github.com/emer/axon/v2/chans/chanplots.VGCCPlot", IDName: "vgcc-plot", Methods: []types.Method{{Name: "GVRun", Doc: "GVRun plots the conductance G (and other variables) as a function of V.", Directives: []types.Directive{{Tool: "types", Directive: "add"}}}, {Name: "TimeRun", Doc: "TimeRun runs the equation over time.", Directives: []types.Directive{{Tool: "types", Directive: "add"}}}}, Fields: []types.Field{{Name: "VGCC", Doc: "VGCC function"}, {Name: "Vstart", Doc: "starting voltage"}, {Name: "Vend", Doc: "ending voltage"}, {Name: "Vstep", Doc: "voltage increment"}, {Name: "TimeSteps", Doc: "number of time steps"}, {Name: "TimeSpike", Doc: "do spiking instead of voltage ramp"}, {Name: "SpikeFreq", Doc: "spiking frequency"}, {Name: "TimeVstart", Doc: "time-run starting membrane potential"}, {Name: "TimeVend", Doc: "time-run ending membrane potential"}, {Name: "Dir"}, {Name: "Tabs"}}})
