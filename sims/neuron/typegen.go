// Code generated by "core generate -add-types -add-funcs"; DO NOT EDIT.

package neuron

import (
	"cogentcore.org/core/types"
)

var _ = types.AddType(&types.Type{Name: "github.com/emer/axon/v2/sims/neuron.ParamConfig", IDName: "param-config", Doc: "ParamConfig has config parameters related to sim params.", Fields: []types.Field{{Name: "Sheet", Doc: "Sheet is the extra params sheet name(s) to use (space separated\nif multiple). Must be valid name as listed in compiled-in params\nor loaded params."}, {Name: "Script", Doc: "Script is an interpreted script that is run to set parameters in Layer and Path\nsheets, by default using the \"Script\" set name."}, {Name: "Tag", Doc: "Tag is an extra tag to add to file names and logs saved from this run."}, {Name: "Note", Doc: "Note is additional info to describe the run params etc,\nlike a git commit message for the run."}, {Name: "SaveAll", Doc: "SaveAll will save a snapshot of all current param and config settings\nin a directory named params_<datestamp> (or _good if Good is true),\nthen quit. Useful for comparing to later changes and seeing multiple\nviews of current params."}, {Name: "Good", Doc: "Good is for SaveAll, save to params_good for a known good params state.\nThis can be done prior to making a new release after all tests are passing.\nAdd results to git to provide a full diff record of all params over level."}}})

var _ = types.AddType(&types.Type{Name: "github.com/emer/axon/v2/sims/neuron.RunConfig", IDName: "run-config", Doc: "RunConfig has config parameters related to running the sim.", Fields: []types.Field{{Name: "Cycles", Doc: "Cycles is the total number of cycles to run."}, {Name: "OnCycle", Doc: "OnCycle is when the excitatory input into the neuron turns on."}, {Name: "OffCycle", Doc: "OffCycle is when does excitatory input into the neuron turns off."}}})

var _ = types.AddType(&types.Type{Name: "github.com/emer/axon/v2/sims/neuron.LogConfig", IDName: "log-config", Doc: "LogConfig has config parameters related to logging data.", Fields: []types.Field{{Name: "Save", Doc: "Save saves a log file when run in nogui mode."}}})

var _ = types.AddType(&types.Type{Name: "github.com/emer/axon/v2/sims/neuron.Config", IDName: "config", Doc: "Config has the overall Sim configuration options.", Fields: []types.Field{{Name: "Name", Doc: "Name is the short name of the sim."}, {Name: "Title", Doc: "Title is the longer title of the sim."}, {Name: "URL", Doc: "URL is a link to the online README or other documentation for this sim."}, {Name: "Doc", Doc: "Doc is brief documentation of the sim."}, {Name: "GeClamp", Doc: "GeClamp clamps a constant Ge value; otherwise there is a discrete spiking input."}, {Name: "SpikeHz", Doc: "SpikeHz is the frequency of input spiking for !GeClamp mode."}, {Name: "VgccGe", Doc: "VgccGe is the strength of the VGCC contribution to Ge(t) excitatory\nconductance. This is only activated during spikes, and is an essential part of\nthe Ca-driven learning to reflect recv spiking in the Ca signal.\nIf too strong it can leads to runaway excitatory bursting."}, {Name: "AKGk", Doc: "AKGk is the strength of the A-type potassium channel, which is only active\nat high (depolarized) membrane potentials, i.e., during spikes.\nIt is useful to balance against the excitatiohn from VGCC's."}, {Name: "Includes", Doc: "Includes has a list of additional config files to include.\nAfter configuration, it contains list of include files added."}, {Name: "GUI", Doc: "GUI means open the GUI. Otherwise it runs automatically and quits,\nsaving results to log files."}, {Name: "Debug", Doc: "Debug reports debugging information."}, {Name: "Params", Doc: "Params has parameter related configuration options."}, {Name: "Run", Doc: "Run has sim running related configuration options."}, {Name: "Log", Doc: "Log has data logging related configuration options."}}})

var _ = types.AddType(&types.Type{Name: "github.com/emer/axon/v2/sims/neuron.Modes", IDName: "modes", Doc: "Modes are the looping modes (Stacks) for running and statistics."})

var _ = types.AddType(&types.Type{Name: "github.com/emer/axon/v2/sims/neuron.Levels", IDName: "levels", Doc: "Levels are the looping levels for running and statistics."})

var _ = types.AddType(&types.Type{Name: "github.com/emer/axon/v2/sims/neuron.StatsPhase", IDName: "stats-phase", Doc: "StatsPhase is the phase of stats processing for given mode, level.\nAccumulated values are reset at Start, added each Step."})

var _ = types.AddType(&types.Type{Name: "github.com/emer/axon/v2/sims/neuron.Sim", IDName: "sim", Doc: "Sim encapsulates the entire simulation model, and we define all the\nfunctionality as methods on this struct.  This structure keeps all relevant\nstate information organized and available without having to pass everything around\nas arguments to methods, and provides the core GUI interface (note the view tags\nfor the fields which provide hints to how things should be displayed).", Fields: []types.Field{{Name: "Ge", Doc: "Ge is the synaptic excitatory conductance per time step (ms), when getting input."}, {Name: "Gi", Doc: "Gi is the raw inhibitory conductance per time step (ms)."}, {Name: "ErevE", Doc: "ErevE is the excitatory reversal (driving) potential in mV.\nThis determines where excitation pushes Vm up to."}, {Name: "ErevI", Doc: "ErevI is the inhibition reversal (driving) potential in mV.\nThis determines where inhibition pulls Vm down to."}, {Name: "Noise", Doc: "NoiseG is the strength of the noise conductance."}, {Name: "NmdaGe", Doc: "NmdaGe is the strength of contribution of the NMDA excitatory Ca++ current,\nto the overall Ge(t) excitatory conductance value. This channel\nhas a long time constant and is essential for establishing\na more stable neural representation over time by keeping active neurons active."}, {Name: "GababGk", Doc: "GababGk is the strength of contribution of the GABA-B inhibitory K current,\nto the overall Gk(t) inhibitory potassium (K) conductance value. This channel\nalso has a long time constant like NMDA, and works in opposition to it,\nby keeping inactive neurons inactive, synergistically helping to establish\nstable neural representations."}, {Name: "KNa", Doc: "KNa toggles the use of sodium-gated potassium adaptation mechanisms\nthat cause the neuron to reduce spiking over time."}, {Name: "MahpGk", Doc: "MahpGk is the strength of mAHP M-type K channel, which drives adaptation\nsimilar to KNa adaptation mechanisms."}, {Name: "Config", Doc: "Config has simulation configuration parameters, set by .toml config file and / or args."}, {Name: "Net", Doc: "Net is the network: click to view / edit parameters for layers, paths, etc."}, {Name: "InputISI", Doc: "InputISI is the input ISI countdown for spiking mode; counts up."}, {Name: "Params", Doc: "Params manages network parameter setting."}, {Name: "NetUpdate", Doc: "NetUpdate has Test mode netview update parameters."}, {Name: "Root", Doc: "Root is the root tensorfs directory, where all stats and other misc sim data goes."}, {Name: "Stats", Doc: "Stats has the stats directory within Root."}, {Name: "Current", Doc: "Current has the current stats values within Stats."}, {Name: "StatFuncs", Doc: "StatFuncs are statistics functions called at given mode and level,\nto perform all stats computations. phase = Start does init at start of given level,\nand all intialization / configuration (called during Init too)."}, {Name: "GUI", Doc: "GUI manages all the GUI elements"}, {Name: "RandSeeds", Doc: "RandSeeds is a list of random seeds to use for each run."}}})

var _ = types.AddFunc(&types.Func{Name: "github.com/emer/axon/v2/sims/neuron.NewConfig", Returns: []string{"Config"}})

var _ = types.AddFunc(&types.Func{Name: "github.com/emer/axon/v2/sims/neuron.RunSim", Doc: "RunSim runs the simulation as a standalone app\nwith given configuration.", Args: []string{"cfg"}, Returns: []string{"error"}})

var _ = types.AddFunc(&types.Func{Name: "github.com/emer/axon/v2/sims/neuron.EmbedSim", Doc: "EmbedSim runs the simulation with default configuration\nembedded within given body element.", Args: []string{"b"}, Returns: []string{"Sim"}})
