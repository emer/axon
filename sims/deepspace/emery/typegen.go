// Code generated by "core generate -add-types"; DO NOT EDIT.

package emery

import (
	"cogentcore.org/core/types"
)

var _ = types.AddType(&types.Type{Name: "github.com/emer/axon/v2/sims/deepspace/emery.Actions", IDName: "actions", Doc: "Actions is a list of mutually exclusive states\nfor tracing the behavior and internal state of Emery"})

var _ = types.AddType(&types.Type{Name: "github.com/emer/axon/v2/sims/deepspace/emery.Geom", IDName: "geom", Doc: "Geom is overall geometry of the space", Fields: []types.Field{{Name: "Depth", Doc: "computed total depth, starts at 0 goes deep"}, {Name: "Width", Doc: "computed total width"}, {Name: "Thick", Doc: "thickness of walls, floor"}, {Name: "HalfWidth", Doc: "half width for centering on 0 X"}}})

var _ = types.AddType(&types.Type{Name: "github.com/emer/axon/v2/sims/deepspace/emery.EmeryEnv", IDName: "emery-env", Doc: "EmeryEnv is the emery rat environment", Fields: []types.Field{{Name: "Name", Doc: "name of this environment"}, {Name: "AngleCode", Doc: "angle population code values, in normalized units"}, {Name: "LinearCode", Doc: "population code for linear values, -1..1, in normalized units"}, {Name: "UnitsPer", Doc: "UnitsPer is the number of units per localist value."}, {Name: "LinearUnits", Doc: "LinearUnits is the number of units per linear value."}, {Name: "AngleUnits", Doc: "AngleUnits is the number of units per angle value."}, {Name: "Geom", Doc: "Geom is the world geometry."}, {Name: "Emery", Doc: "Emery is the physics body for Emery."}, {Name: "EyeR", Doc: "Right eye of emery"}, {Name: "World", Doc: "World is the 3D world, including emery"}, {Name: "Camera", Doc: "offscreen render camera settings"}, {Name: "SceneEditor", Doc: "3D visualization of the Scene"}, {Name: "EyeRFullImage", Doc: "first-person right-eye full field view"}, {Name: "EyeRFovImage", Doc: "first-person right-eye fovea view"}, {Name: "LastAct", Doc: "LastAct is the last action taken"}, {Name: "LastActValue", Doc: "LastActValue is the parameter for last action"}, {Name: "CurStates", Doc: "CurStates is the current rendered state tensors."}, {Name: "NextStates", Doc: "NextStates is the next rendered state tensors -- updated from actions."}, {Name: "MaxRotate", Doc: "MaxRotate is maximum rotation angle magnitude per action, in degrees."}, {Name: "Rand", Doc: "Rand is the random number generator for the env.\nAll random calls must use this.\nSet seed here for weight initialization values."}, {Name: "RandSeed", Doc: "random seed"}}})
