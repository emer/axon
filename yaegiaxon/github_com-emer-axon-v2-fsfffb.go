// Code generated by 'yaegi extract github.com/emer/axon/v2/fsfffb'. DO NOT EDIT.

package yaegiaxon

import (
	"github.com/emer/axon/v2/fsfffb"
	"reflect"
)

func init() {
	Symbols["github.com/emer/axon/v2/fsfffb/fsfffb"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"FBs":             reflect.ValueOf(fsfffb.FBs),
		"FBsRaw":          reflect.ValueOf(fsfffb.FBsRaw),
		"FFAvg":           reflect.ValueOf(fsfffb.FFAvg),
		"FFAvgPrv":        reflect.ValueOf(fsfffb.FFAvgPrv),
		"FFs":             reflect.ValueOf(fsfffb.FFs),
		"FFsRaw":          reflect.ValueOf(fsfffb.FFsRaw),
		"FSGi":            reflect.ValueOf(fsfffb.FSGi),
		"FSi":             reflect.ValueOf(fsfffb.FSi),
		"GeExtRaw":        reflect.ValueOf(fsfffb.GeExtRaw),
		"GeExts":          reflect.ValueOf(fsfffb.GeExts),
		"GiOrig":          reflect.ValueOf(fsfffb.GiOrig),
		"InhibVarsN":      reflect.ValueOf(fsfffb.InhibVarsN),
		"InhibVarsValues": reflect.ValueOf(fsfffb.InhibVarsValues),
		"LayGi":           reflect.ValueOf(fsfffb.LayGi),
		"SSGi":            reflect.ValueOf(fsfffb.SSGi),
		"SSf":             reflect.ValueOf(fsfffb.SSf),
		"SSi":             reflect.ValueOf(fsfffb.SSi),
		"TotalGi":         reflect.ValueOf(fsfffb.TotalGi),

		// type definitions
		"GiParams":  reflect.ValueOf((*fsfffb.GiParams)(nil)),
		"InhibVars": reflect.ValueOf((*fsfffb.InhibVars)(nil)),
	}
}
