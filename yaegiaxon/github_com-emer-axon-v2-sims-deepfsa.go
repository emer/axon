// Code generated by 'yaegi extract github.com/emer/axon/v2/sims/deepfsa'. DO NOT EDIT.

package yaegiaxon

import (
	"github.com/emer/axon/v2/sims/deepfsa"
	"reflect"
)

func init() {
	Symbols["github.com/emer/axon/v2/sims/deepfsa/deepfsa"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"Cycle":            reflect.ValueOf(deepfsa.Cycle),
		"Epoch":            reflect.ValueOf(deepfsa.Epoch),
		"Expt":             reflect.ValueOf(deepfsa.Expt),
		"LayerParams":      reflect.ValueOf(&deepfsa.LayerParams).Elem(),
		"LevelsN":          reflect.ValueOf(deepfsa.LevelsN),
		"LevelsValues":     reflect.ValueOf(deepfsa.LevelsValues),
		"ModesN":           reflect.ValueOf(deepfsa.ModesN),
		"ModesValues":      reflect.ValueOf(deepfsa.ModesValues),
		"PathParams":       reflect.ValueOf(&deepfsa.PathParams).Elem(),
		"Run":              reflect.ValueOf(deepfsa.Run),
		"Start":            reflect.ValueOf(deepfsa.Start),
		"StatsPhaseN":      reflect.ValueOf(deepfsa.StatsPhaseN),
		"StatsPhaseValues": reflect.ValueOf(deepfsa.StatsPhaseValues),
		"Step":             reflect.ValueOf(deepfsa.Step),
		"Test":             reflect.ValueOf(deepfsa.Test),
		"Train":            reflect.ValueOf(deepfsa.Train),
		"Trial":            reflect.ValueOf(deepfsa.Trial),

		// type definitions
		"Config":      reflect.ValueOf((*deepfsa.Config)(nil)),
		"EnvConfig":   reflect.ValueOf((*deepfsa.EnvConfig)(nil)),
		"FSAEnv":      reflect.ValueOf((*deepfsa.FSAEnv)(nil)),
		"Levels":      reflect.ValueOf((*deepfsa.Levels)(nil)),
		"LogConfig":   reflect.ValueOf((*deepfsa.LogConfig)(nil)),
		"Modes":       reflect.ValueOf((*deepfsa.Modes)(nil)),
		"ParamConfig": reflect.ValueOf((*deepfsa.ParamConfig)(nil)),
		"RunConfig":   reflect.ValueOf((*deepfsa.RunConfig)(nil)),
		"Sim":         reflect.ValueOf((*deepfsa.Sim)(nil)),
		"StatsPhase":  reflect.ValueOf((*deepfsa.StatsPhase)(nil)),
	}
}
