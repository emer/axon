// Code generated by 'yaegi extract github.com/emer/axon/v2/sims/bgventral'. DO NOT EDIT.

package yaegiaxon

import (
	"github.com/emer/axon/v2/sims/bgventral"
	"reflect"
)

func init() {
	Symbols["github.com/emer/axon/v2/sims/bgventral/bgventral"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"Cycle":            reflect.ValueOf(bgventral.Cycle),
		"Epoch":            reflect.ValueOf(bgventral.Epoch),
		"LayerParams":      reflect.ValueOf(&bgventral.LayerParams).Elem(),
		"LevelsN":          reflect.ValueOf(bgventral.LevelsN),
		"LevelsValues":     reflect.ValueOf(bgventral.LevelsValues),
		"ModesN":           reflect.ValueOf(bgventral.ModesN),
		"ModesValues":      reflect.ValueOf(bgventral.ModesValues),
		"PathParams":       reflect.ValueOf(&bgventral.PathParams).Elem(),
		"Run":              reflect.ValueOf(bgventral.Run),
		"Start":            reflect.ValueOf(bgventral.Start),
		"StatsPhaseN":      reflect.ValueOf(bgventral.StatsPhaseN),
		"StatsPhaseValues": reflect.ValueOf(bgventral.StatsPhaseValues),
		"Step":             reflect.ValueOf(bgventral.Step),
		"Test":             reflect.ValueOf(bgventral.Test),
		"Theta":            reflect.ValueOf(bgventral.Theta),
		"Train":            reflect.ValueOf(bgventral.Train),
		"Trial":            reflect.ValueOf(bgventral.Trial),

		// type definitions
		"Config":      reflect.ValueOf((*bgventral.Config)(nil)),
		"EnvConfig":   reflect.ValueOf((*bgventral.EnvConfig)(nil)),
		"GoNoEnv":     reflect.ValueOf((*bgventral.GoNoEnv)(nil)),
		"Levels":      reflect.ValueOf((*bgventral.Levels)(nil)),
		"LogConfig":   reflect.ValueOf((*bgventral.LogConfig)(nil)),
		"Modes":       reflect.ValueOf((*bgventral.Modes)(nil)),
		"ParamConfig": reflect.ValueOf((*bgventral.ParamConfig)(nil)),
		"RunConfig":   reflect.ValueOf((*bgventral.RunConfig)(nil)),
		"Sim":         reflect.ValueOf((*bgventral.Sim)(nil)),
		"StatsPhase":  reflect.ValueOf((*bgventral.StatsPhase)(nil)),
	}
}
