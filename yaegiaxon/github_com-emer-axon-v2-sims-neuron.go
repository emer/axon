// Code generated by 'yaegi extract github.com/emer/axon/v2/sims/neuron'. DO NOT EDIT.

package yaegiaxon

import (
	"github.com/emer/axon/v2/sims/neuron"
	"reflect"
)

func init() {
	Symbols["github.com/emer/axon/v2/sims/neuron/neuron"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"Cycle":            reflect.ValueOf(neuron.Cycle),
		"Embed":            reflect.ValueOf(neuron.Embed),
		"LayerParams":      reflect.ValueOf(&neuron.LayerParams).Elem(),
		"LevelsN":          reflect.ValueOf(neuron.LevelsN),
		"LevelsValues":     reflect.ValueOf(neuron.LevelsValues),
		"ModesN":           reflect.ValueOf(neuron.ModesN),
		"ModesValues":      reflect.ValueOf(neuron.ModesValues),
		"PathParams":       reflect.ValueOf(&neuron.PathParams).Elem(),
		"Start":            reflect.ValueOf(neuron.Start),
		"StatsPhaseN":      reflect.ValueOf(neuron.StatsPhaseN),
		"StatsPhaseValues": reflect.ValueOf(neuron.StatsPhaseValues),
		"Step":             reflect.ValueOf(neuron.Step),
		"Test":             reflect.ValueOf(neuron.Test),
		"Trial":            reflect.ValueOf(neuron.Trial),

		// type definitions
		"Config":      reflect.ValueOf((*neuron.Config)(nil)),
		"Levels":      reflect.ValueOf((*neuron.Levels)(nil)),
		"LogConfig":   reflect.ValueOf((*neuron.LogConfig)(nil)),
		"Modes":       reflect.ValueOf((*neuron.Modes)(nil)),
		"ParamConfig": reflect.ValueOf((*neuron.ParamConfig)(nil)),
		"RunConfig":   reflect.ValueOf((*neuron.RunConfig)(nil)),
		"Sim":         reflect.ValueOf((*neuron.Sim)(nil)),
		"StatsPhase":  reflect.ValueOf((*neuron.StatsPhase)(nil)),
	}
}
