// Code generated by "core generate -add-types -gosl"; DO NOT EDIT.

package kinase

import (
	"cogentcore.org/core/types"
)

var _ = types.AddType(&types.Type{Name: "github.com/emer/axon/v2/kinase.CaDtParams", IDName: "ca-dt-params", Doc: "CaDtParams has rate constants for integrating Ca calcium\nat different time scales, including final CaP = CaMKII and CaD = DAPK1\ntimescales for LTP potentiation vs. LTD depression factors.", Directives: []types.Directive{{Tool: "go", Directive: "generate", Args: []string{"core", "generate", "-add-types", "-gosl"}}, {Tool: "gosl", Directive: "start"}, {Tool: "types", Directive: "add"}}, Fields: []types.Field{{Name: "MTau", Doc: "CaM (calmodulin) time constant in cycles (msec),\nwhich is the first level integration.\nFor CaLearn, 2 is best; for CaSpk, 5 is best.\nFor synaptic-level integration this integrates on top of Ca\nsignal from send->CaSyn * recv->CaSyn, each of which are\ntypically integrated with a 30 msec Tau."}, {Name: "PTau", Doc: "LTP spike-driven potentiation Ca factor (CaP) time constant\nin cycles (msec), simulating CaMKII in the Kinase framework,\ncascading on top of MTau.\nComputationally, CaP represents the plus phase learning signal that\nreflects the most recent past information.\nValue tracks linearly with number of cycles per learning trial:\n200 = 40, 300 = 60, 400 = 80"}, {Name: "DTau", Doc: "LTD spike-driven depression Ca factor (CaD) time constant\nin cycles (msec), simulating DAPK1 in Kinase framework,\ncascading on top of PTau.\nComputationally, CaD represents the minus phase learning signal that\nreflects the expectation representation prior to experiencing the\noutcome (in addition to the outcome).\nValue tracks linearly with number of cycles per learning trial:\n200 = 40, 300 = 60, 400 = 80"}, {Name: "MDt", Doc: "rate = 1 / tau"}, {Name: "PDt", Doc: "rate = 1 / tau"}, {Name: "DDt", Doc: "rate = 1 / tau"}, {Name: "pad"}, {Name: "pad1"}}})

var _ = types.AddType(&types.Type{Name: "github.com/emer/axon/v2/kinase.CaSpikeParams", IDName: "ca-spike-params", Doc: "CaSpikeParams parameterizes the neuron-level spike-driven calcium\nsignals, including CaM, CaP, CaD for basic activity stats and RLRate, and\nCaSyn which is integrated at the neuron level and drives synapse-level,\npre * post Ca integration, providing the Tr credit assignment trace factor\nfor kinase error-driven cortical learning.", Fields: []types.Field{{Name: "SpikeCaM", Doc: "SpikeCaM is the drive factor for updating the neuron-level CaM (calmodulin)\nbased on a spike impulse, which is then cascaded into updating the\nCaP and CaD values. These values are used for stats and RLRate computation,\nbut do not drive learning directly. Larger values (e.g., 12) may be useful\nin some models."}, {Name: "SpikeCaSyn", Doc: "SpikeCaSyn is the drive factor for updating the neuron-level CaSyn\nsynaptic calcium trace value based on a spike impulse. CaSyn is integrated\ninto CaBins which are then used to compute synapse-level pre * post\nCa values over the theta cycle, which then drive the Tr credit assignment\ntrace factor for kinase error-driven cortical learning. Changes in this\nvalue will affect the net learning rate."}, {Name: "CaSynTau", Doc: "CaSynTau is the time constant for integrating the spike-driven calcium\ntrace CaSyn at sender and recv neurons. See SpikeCaSyn for more info.\nIf this param is changed, then there will be a change in effective\nlearning rate that can be compensated for by multiplying\nCaScale by sqrt(30 / sqrt(SynTau)"}, {Name: "CaSynDt", Doc: "CaSynDt rate = 1 / tau"}, {Name: "Dt", Doc: "Dt are time constants for integrating Spike-driven Ca across CaM, CaP and CaD\ncascading levels. Typically the same as in LearnCa parameters."}}})
