// Code generated by "core generate -add-types"; DO NOT EDIT.

package kinase

import (
	"cogentcore.org/core/enums"
)

var _SynCaBinEnvelopesValues = []SynCaBinEnvelopes{0, 1, 2, 3}

// SynCaBinEnvelopesN is the highest valid value for type SynCaBinEnvelopes, plus one.
const SynCaBinEnvelopesN SynCaBinEnvelopes = 4

var _SynCaBinEnvelopesValueMap = map[string]SynCaBinEnvelopes{`Env30`: 0, `Env25`: 1, `Env20`: 2, `Env10`: 3}

var _SynCaBinEnvelopesDescMap = map[SynCaBinEnvelopes]string{0: `Env30 sets the weights to t-1 = 1, t-2 = 1, producing a uniform 30 msec integration window.`, 1: `Env25 sets the weights to t-1 = 1, t-2 = .5, approximating a 25 msec integration window.`, 2: `Env20 sets the weights to t-1 = 1, t-2 = 0, producing a uniform 20 msec integration window.`, 3: `Env10 sets the weights to t-1 = 0, t-2 = 0, producing a fast 10 msec integration window.`}

var _SynCaBinEnvelopesMap = map[SynCaBinEnvelopes]string{0: `Env30`, 1: `Env25`, 2: `Env20`, 3: `Env10`}

// String returns the string representation of this SynCaBinEnvelopes value.
func (i SynCaBinEnvelopes) String() string { return enums.String(i, _SynCaBinEnvelopesMap) }

// SetString sets the SynCaBinEnvelopes value from its string representation,
// and returns an error if the string is invalid.
func (i *SynCaBinEnvelopes) SetString(s string) error {
	return enums.SetString(i, s, _SynCaBinEnvelopesValueMap, "SynCaBinEnvelopes")
}

// Int64 returns the SynCaBinEnvelopes value as an int64.
func (i SynCaBinEnvelopes) Int64() int64 { return int64(i) }

// SetInt64 sets the SynCaBinEnvelopes value from an int64.
func (i *SynCaBinEnvelopes) SetInt64(in int64) { *i = SynCaBinEnvelopes(in) }

// Desc returns the description of the SynCaBinEnvelopes value.
func (i SynCaBinEnvelopes) Desc() string { return enums.Desc(i, _SynCaBinEnvelopesDescMap) }

// SynCaBinEnvelopesValues returns all possible values for the type SynCaBinEnvelopes.
func SynCaBinEnvelopesValues() []SynCaBinEnvelopes { return _SynCaBinEnvelopesValues }

// Values returns all possible values for the type SynCaBinEnvelopes.
func (i SynCaBinEnvelopes) Values() []enums.Enum { return enums.Values(_SynCaBinEnvelopesValues) }

// MarshalText implements the [encoding.TextMarshaler] interface.
func (i SynCaBinEnvelopes) MarshalText() ([]byte, error) { return []byte(i.String()), nil }

// UnmarshalText implements the [encoding.TextUnmarshaler] interface.
func (i *SynCaBinEnvelopes) UnmarshalText(text []byte) error {
	return enums.UnmarshalText(i, text, "SynCaBinEnvelopes")
}
